TEST1:
course-add#12S2203#Object-oriented Programming#3#C
course-add#10S1002#Pemrograman Prosedural#2#D
student-add#12S20999#Wiro Sableng#2020#Information Systems
enrollment-add#12S2203#12S20999#2021/2022#even
student-add#12S20111#Jaka Sembung#2019#Information Systems
enrollment-add#12S2203#12S20000#2020/2021#even
enrollment-add#12S2200#12S20000#2020/2021#odd
---


output:
invalid student|12S20000
invalid course|12S2200
10S1002|Pemrograman Prosedural|2|D
12S2203|Object-oriented Programming|3|C
12S20999|Wiro Sableng|2020|Information Systems
12S20111|Jaka Sembung|2019|Information Systems
12S2203|12S20999|2021/2022|even|None



TEST2:
course-add#12S2203#Object-oriented Programming#3#C
course-add#10S1002#Pemrograman Prosedural#2#D
enrollment-add#12S2203#12S20999#2021/2022#even
student-add#12S20999#Wiro Sableng#2020#Information Systems
enrollment-add#12S2203#12S20999#2021/2022#even
student-add#12S20111#Jaka Sembung#2019#Information Systems
enrollment-add#12S2200#12S20000#2020/2021#odd
---

invalid student|12S20999
invalid course|12S2200
10S1002|Pemrograman Prosedural|2|D
12S2203|Object-oriented Programming|3|C
12S20999|Wiro Sableng|2020|Information Systems
12S20111|Jaka Sembung|2019|Information Systems
12S2203|12S20999|2021/2022|even|None

// Sort courses by credit hours first, then by ID with letters first, then numbers
        courses.sort((c1, c2) -> {
            int creditCompare = Integer.compare(c1.getCreditHours(), c2.getCreditHours());
            if (creditCompare != 0) return creditCompare;
            boolean c1IsLetter = Character.isLetter(c1.getId().charAt(0));
            boolean c2IsLetter = Character.isLetter(c2.getId().charAt(0));
            if (c1IsLetter && !c2IsLetter) return -1;
            if (!c1IsLetter && c2IsLetter) return 1;
            return c1.getId().compareTo(c2.getId());
        });
